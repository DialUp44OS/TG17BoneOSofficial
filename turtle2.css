@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}


article {
  /*  leverage cascade for cross-browser gradients  */
  background: radial-gradient(
    hsl(100 100% 60%), 
    hsl(200 100% 60%) 
  ) fixed;
  background: conic-gradient(
    hsl(100 100% 60%), 
    hsl(200 100% 60%), 
    hsl(100 100% 60%) 
  ) fixed;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-align: center;
  font-size:50px ;
  outline-size: 5px;
  outline-color: #0d0d0d ;
} 






* {
  box-sizing: border-box;
  color: #ffffff;
  font-family: Arial, Helvetica, sans-serif;
}

.forkme-button {
  margin: 0;
  width: 10vw;
  height: 10vw;
  transition-duration: 0.3s;
}

.forkme-button:hover {
  width: 12vw;
  height: 12vw;
}
#desc {
  display: none;
}

.fork-link {
  padding: 0;
  position: absolute;
  top: 0;
  right: 0;
}

body {
  background: radial-gradient(circle, #24246e, #06051f);
  //isolation: isolate;
  overflow: hidden;
  position: relative;
  width: 100vw;
  height: 100vh;
  
  &:active {
    div,
    div::before,
    div::after { 
      // Commented out for performance
      //mix-blend-mode: color-dodge;
      padding: 40px;
    }
  }
}

a.icon {
  margin: 0.5%;
  padding: 0;
  width: 5% !important;
}

img.icon {
  margin: 0;
  padding: 0;
  width: 100%;
}

header {
  display: flex;
  align-items: center;
  padding: 0;
  margin: 0;
  gap: 1.5%;
  background-color: #151515;
}

header a {
  padding: 0;
  margin: 0;
  text-decoration: underline;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  text-align: center;
}

.game-container {
  display: flex;
  justify-content: center;
}

.game-select {
  display: flex;
  justify-content: center;
  gap: 3%;
  flex-wrap: wrap;
  max-width: 100%;
}

.game-button {
  background-color: #333333;
  border-radius: 10px;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  -o-border-radius: 10px;
  margin-bottom: 3%;
  padding: 6px;
  transition-duration: 0.3s;
  transform: translate(0px, 0px);
}

.game-button img {
  border-radius: 10px;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  -o-border-radius: 10px;
  width: 200px;
  height: 150px;
  object-fit: cover;
  position: center;
}

.game-button a {
  text-decoration: none;
}

.game-button:hover {
  transition-duration: 0.3s;
  transform: translate(0px, -10px);
}
.cursor-pointer {
  cursor: pointer;
}


$colors: (
  purple: #241379,
  medium-blue: #2185bf,
  light-blue: #1fbce1,

  red: #b62f56,
  orange: #d5764c,
  yellow: #ffd53e,

  cyan: #78ffba,
  light-green: #98fd85,
  lime: #befb46,

  magenta: #6c046c,
  lightish-red: #f04c81,
  pink: #ff4293
);



div,
div::before,
div::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0.9;
  transform-origin: top;
  transition: all 5s linear 0s;
}

@function random-num($min, $max) {
  @return floor(random() * ($max - $min) + $min);
}

@function random-calc($number) {
  $max: 100 - $number;
  $min: $number * -1;
  @return random-num($min, $max);
}

@each $color-name, $color-hex in $colors {
  // Initial top and left positions
  $random1: random(100);
  $random2: random(100);

  // Animated top and left positions
  $random3: random(100);
  $random4: random(100);
  
  // Animated top and left end positions
  $random5: random(100);
  $random6: random(100);

  .#{$color-name} {
    $size: random-num(5,50) + px;
    animation: #{$color-name} linear 30s alternate infinite;
    border: 2px solid #{$color-hex};
    border-radius: 100%;
    width: $size;
    height: $size;
    transform: translate3d(
      $random1 + vw,
      $random2 + vh,
      0);
    z-index: random(12);
  }

  .#{$color-name}::before {
    animation: #{$color-name}-pseudo linear 15s alternate infinite;
    background: #{$color-hex};
    border: 2px solid #{$color-hex};
    width: random-num(5,50) + px;
    height: random-num(5,50) + px;
    transform:
      translate3d(
        random-calc($random1) + vw,
        random-calc($random2) + vh,
        0)
      rotate((random(360)) + deg);
  }

  .#{$color-name}::after{
    animation: #{$color-name}-pseudo linear 20s alternate infinite;
    border: 2px solid #{$color-hex};
    width: random-num(5,50) + px;
    height: random-num(5,50) + px;
    transform:
      translate3d(
        random-calc($random1) + vw,
        random-calc($random2) + vh,
        0)
      rotate((random(360)) + deg);
  }

  @keyframes #{$color-name} {
    50% {
      transform: translate3d(
        $random3 + vw,
        $random4 + vh,
        0);
    }
    100% {
      transform: translate3d(
        $random5 + vw,
        $random6 + vh,
        0);
    }
  }

  @keyframes #{$color-name}-pseudo {
    33% {
      transform:
        translate3d(
          random-calc($random3) + vw,
          random-calc($random4) + vh,
          0)
        rotate((random(360)) + deg);
    }
    100% {
      transform:
        translate3d(
          random-calc($random5) + vw,
          random-calc($random6) + vh,
          0)
        rotate((random(360)) + deg);
    }
  }
}

