@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}


article {
  /*  leverage cascade for cross-browser gradients  */
  background: radial-gradient(
    hsl(100 100% 60%), 
    hsl(200 100% 60%) 
  ) fixed;
  background: conic-gradient(
    hsl(100 100% 60%), 
    hsl(200 100% 60%), 
    hsl(100 100% 60%) 
  ) fixed;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-align: center;
} 






* {
  box-sizing: border-box;
  color: #ffffff;
  font-family: Arial, Helvetica, sans-serif;
}

.forkme-button {
  margin: 0;
  width: 10vw;
  height: 10vw;
  transition-duration: 0.3s;
}

.forkme-button:hover {
  width: 12vw;
  height: 12vw;
}
#desc {
  display: none;
}

.fork-link {
  padding: 0;
  position: absolute;
  top: 0;
  right: 0;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
   background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
  overflow: hidden;
}

a.icon {
  margin: 0.5%;
  padding: 0;
  width: 5% !important;
}

img.icon {
  margin: 0;
  padding: 0;
  width: 100%;
}

header {
  display: flex;
  align-items: center;
  padding: 0;
  margin: 0;
  gap: 1.5%;
  background-color: #151515;
}

header a {
  padding: 0;
  margin: 0;
  text-decoration: underline;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  text-align: center;
}

.game-container {
  display: flex;
  justify-content: center;
}

.game-select {
  display: flex;
  justify-content: center;
  gap: 3%;
  flex-wrap: wrap;
  max-width: 100%;
}

.game-button {
  background-color: #333333;
  border-radius: 10px;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  -o-border-radius: 10px;
  margin-bottom: 3%;
  padding: 6px;
  transition-duration: 0.3s;
  transform: translate(0px, 0px);
}

.game-button img {
  border-radius: 10px;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  -o-border-radius: 10px;
  width: 200px;
  height: 150px;
  object-fit: cover;
  position: center;
}

.game-button a {
  text-decoration: none;
}

.game-button:hover {
  transition-duration: 0.3s;
  transform: translate(0px, -10px);
}
.cursor-pointer {
  cursor: pointer;
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
}

.star {
  $star-count: 50;
  --star-color: var(--primary-color);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
  
  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{random_range(500em, 750em) / 100};
      --top-offset: #{random_range(0vh, 10000vh) / 100};
      --fall-duration: #{random_range(6000, 12000s) / 1000};
      --fall-delay: #{random_range(0, 10000s) / 1000};
    }
  }

  &::before, &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%, 80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}
